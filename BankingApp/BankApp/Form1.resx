<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UAh+1QAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>107</value>
  </metadata>
</root>